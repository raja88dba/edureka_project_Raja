try{
	node('master'){
            def docker
            def dockerCMD
            def jdk
            def java
            def dockerImage
            def tagName
            def gitURL
            def projectName
            stage('Prepare'){
                echo "Prepare Tools and Variables to be used in Pipeline Script"
                docker = tool name: 'docker', type: 'dockerTool'
                dockerCMD = "${docker}/bin/docker"
                jdk = tool name: 'java11', type: 'jdk'
                java = "${jdk}/bin/java"
                dockerImage = "raja88dba/edureka_project_Raja"
                tagName = "1.0"
                gitURL = "https://github.com/raja88dba"
                projectName = "edureka_project_Raja"
            }
            stage('Checkout'){
                echo "Checkout Application Code from GitHub Repository"
                git branch: 'main', credentialsId: 'GitHub', url: "${gitURL}/${projectName}.git"
	        }
	        stage('Provision Tool on slave1'){
	            echo "ProvisionTools for deployment on slave1"
	            ansiblePlaybook credentialsId: 'AnsibleSSH', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'slave1.yml'
	        }
            stage('Build Docker Image'){
                echo "Build Docker image from Dockerfile"
                sh "sudo ${dockerCMD} build -t ${dockerImage}:${tagName} ."
            }
            stage('Push to DockerHub'){
                echo "Push Docker Image to DockerHub Online Registry"
                withCredentials([usernamePassword(credentialsId: 'DockerHub', passwordVariable: 'dockerHubPwd', usernameVariable: 'dockerHubUsername')]) {
                    sh "sudo ${dockerCMD} login -u ${dockerHubUsername} -p ${dockerHubPwd}"
                    sh "sudo ${dockerCMD} push  ${dockerImage}:${tagName}"
                }
            }
            stage('Deploy Application on slave1'){
                echo "Deploying PHP App on slave1"
                ansiblePlaybook credentialsId: 'AnsibleSSH', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'slave1_deploy.yml'
            }
            
	    stage('Provision Tool on slave2'){
	        echo "Provisioning Tools deployment on Slave2"
	        ansiblePlaybook credentialsId: 'AnsibleSSH', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'slave2.yml'
	    }
            stage('Deploy Application on slave2'){
                echo "Deploying  PHP App on slave2"
                ansiblePlaybook credentialsId: 'AnsibleSSH', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'slave2_deploy.yml'
            }
            currentBuild.result = 'SUCCESS'
}
}
catch(Exception ex){
        echo "Some Exception Occured"
        currentBuild.result = 'FAILURE'
}
